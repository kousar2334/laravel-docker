networks:
  laravel-docker-network:  
      driver: bridge  

volumes:
  laravel-docker-volume:  
      driver: local 

services:
  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    tty: true
    ports:
        - 80:80
        - 443:443
    volumes: 
        - ./:/var/www/html:cached
        - ./.docker/nginx:/etc/nginx/conf.d
        - ./.docker/nginx/ssl:/etc/nginx/confd/ssl
    depends_on: 
        - php
        - mysql
    networks: 
        - laravel-docker-network
      
  php:
    build:
       context: .
       dockerfile: DockerFile 
    container_name: laravel_php     
    restart: unless-stopped
    tty: true
    volumes:
       - ./src:/var/www/html
    networks: 
      - laravel-docker-network   

  mysql:    
    image: mysql:latest
    container_name: laravel_mysql
    ports:
       - 3306:3306
    volumes:
       - ./mysql:/var/lib/mysql
    environment:
       MYSQL_DATABASE : laravel_test_database
       MYSQL_USER : laravel_test_database_user
       MYSQL_PASSWORD : secret
       MYSQL_ROOT_PASSWORD : secret   
    networks: 
      - laravel-docker-network

  composer: 
    image: composer:latest
    container_name: laravel_composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    command: ["composer", "install", "--ignore-platform-reqs"]
    depends_on:
      - php
    networks:
      - laravel-docker-network

  artisan:
    build:
      context: .
      dockerfile: DockerFile
    container_name: laravel_artisan
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php", "artisan"]
    networks:
      - laravel-docker-network                 